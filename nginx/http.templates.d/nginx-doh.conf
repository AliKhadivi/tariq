# server{

#         listen 8080;
#         listen [::]:8080;
#         server_name doh.fcms.ir;

#         location / {
# #                proxy_pass http://127.0.0.1:8053/;
#                 return https://doh.fcms.ir:${DOH_PORT}$request_uri;
#         }
# }
upstream dohloop {
    zone dohloop 64k;
    server 127.0.0.1:8053;
    keepalive_timeout 60s;
    keepalive_requests 100;
    keepalive 10;
  }

# Proxy Cache storage - so we can cache the DoH response from the upstream
proxy_cache_path /var/cache/nginx/doh_cache levels=1:2 keys_zone=doh_cache:10m;
# The DoH server block
server {

  # Listen on standard HTTPS port, and accept HTTP2, with SSL termination
  listen 443 ssl http2;
  ssl_certificate ${cert_path};
  ssl_certificate_key ${key_path};
  ssl_session_cache shared:ssl_cache:10m;
  ssl_session_timeout 10m;
  
  # DoH may use GET or POST requests, Cache both
  proxy_cache_methods GET POST;

  # Return 404 to all responses, except for those using our published DoH URI
  location / {
    return 404 "404 Not Found\n";
  }

  # This is our published DoH URI 
  location /dns-query {
    # Proxy HTTP/1.1, clear the connection header to enable Keep-Alive
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    # Enable Cache, and set the cache_key to include the request_body
    proxy_cache doh_cache;
    proxy_cache_key $scheme$proxy_host$uri$is_args$args$request_body;
    # proxy pass to the dohloop upstream
    proxy_pass http://dohloop;
  }
}

server {
  listen 8080;
  location /api {
    api write=on;
    allow 127.0.0.1;
    # allow 192.168.64.1;
    deny all;
  }
}

# server{

#         listen ${DOH_PORT} ssl;
#         listen [::]:${DOH_PORT} ssl;
#         server_name ${domain};

#         ssl_certificate ${cert_path};
#         ssl_certificate_key ${key_path};
#         ssl_dhparam ${dhparam_path};
#         ssl_protocols TLSv1.2 TLSv1.3;          # TLS 1.3 requires nginx >= 1.13.0
#         ssl_prefer_server_ciphers on;
#         ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
#         ssl_ecdh_curve secp384r1;               # Requires nginx >= 1.1.0
#         ssl_session_timeout  10m;
#         ssl_session_cache shared:SSL:10m;
#         ssl_session_tickets off;                # Requires nginx >= 1.5.9
#         ssl_stapling on;                        # Requires nginx >= 1.3.7
#         ssl_stapling_verify on;                 # Requires nginx => 1.3.7
#         ssl_early_data off;                     # 0-RTT, enable if desired - Requires nginx >= 1.15.4
#         resolver 127.0.0.1 valid=300s;            # Replace with your local resolver
#         resolver_timeout 5s;
#         # HTTP Security Headers
#         add_header X-Frame-Options DENY;
#         add_header X-Content-Type-Options nosniff;
#         add_header X-XSS-Protection "1; mode=block";
#         add_header Strict-Transport-Security "max-age=63072000";
        
#         location / {
#                 proxy_pass http://127.0.0.1:8053/;
#                 proxy_set_header Host      $host;
#                 proxy_set_header X-Real-IP $remote_addr;
#         }
# }

